class Delivery

types
public Status = <Null> | <Transport> | <Supplier> | <Client>

values

instance variables
		products: set of Product :={};
		transport: [Transport];
		public status: Status;

operations
public Delivery: set of Product * [Transport]  ==> Delivery
		Delivery(p,t) == (
			products := p;
			transport := t;
			status := <Null>;
			if(t <> nil) then status := <Transport>;
			return self
		);

pure public getProducts: () ==> set of Product
		getProducts()  ==
return products;

pure public getTransport: () ==> [Transport]
		getTransport() ==
return transport;

public setTransport: Transport ==> ()
		setTransport(t) == (
			transport := t;
			status := <Transport>;
		)
		post status = <Transport>;
		
public doing: () ==> bool
		doing() ==
		return status = <Supplier> or status = <Transport>;

public update: () ==> ()
		update() ==
		(
			cases status:
					<Transport> -> status := <Supplier>,
					<Supplier> -> status := <Client>
			end
		)
		
functions

traces

end Delivery