class Product

types
public String = seq of char;

values

instance variables
		name: String;
		price: real;
		quantity: nat;
		
operations

	public Product: String * real * nat ==> Product
	Product(product_name,product_price,product_quantity) == (
			name := product_name;
			price := product_price;
			quantity := product_quantity;
			return self
	);
		
	-- Returns product name
	public pure getName : ()  ==> String
		getName() == 
		return name;

	-- Returns product price
	public pure getPrice : () ==> real
		getPrice() == 
		return price;

	-- Returns product quantity
	public pure getQuantity : () ==> nat
		getQuantity() == return quantity;

	-- Increases product quantity
	public increaseQuantity : nat ==> ()
		increaseQuantity(amount) ==
		quantity := quantity + amount
	pre (quantity + amount) >= 0
	post quantity~ = quantity + amount;

	-- Decreases product quantity
	public decreaseQuantity : nat ==> ()
		decreaseQuantity(amount) ==
		quantity := quantity - amount
	pre (quantity - amount) >= 0
	post quantity~ = quantity + amount;
		
functions

traces

end Product